<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developers Guide on Quentier</title>
    <link>https://d1vanov.github.io/quentier/series/developers-guide/</link>
    <description>Recent content in Developers Guide on Quentier</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Dmitry Ivanov</copyright>
    <lastBuildDate>Thu, 15 Mar 2018 07:48:54 +0300</lastBuildDate>
    
	<atom:link href="https://d1vanov.github.io/quentier/series/developers-guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quentier local storage implementation overview</title>
      <link>https://d1vanov.github.io/quentier/blog/quentier-local-storage-overview/</link>
      <pubDate>Thu, 15 Mar 2018 07:48:54 +0300</pubDate>
      
      <guid>https://d1vanov.github.io/quentier/blog/quentier-local-storage-overview/</guid>
      <description>This post continues the exploration of Quentier&amp;rsquo;s internals: here we&amp;rsquo;ll talk about the implementation details of Quentier&amp;rsquo;s local storage.
As I mentioned in the brief technical overview post, the local storage within libquentier uses SQLite as its backend i.e. all the data downloaded from Evernote (or user&amp;rsquo;s own data in case of local account) is stored within a SQLite database. However, it is just an implementation detail: the fact of SQLite usage is completely opaque to any clients of local storage functionality within libquentier.</description>
    </item>
    
    <item>
      <title>Installation of Quentier&#39;s dependencies</title>
      <link>https://d1vanov.github.io/quentier/blog/quentier-installation-of-dependencies/</link>
      <pubDate>Fri, 19 Jan 2018 11:07:39 +0300</pubDate>
      
      <guid>https://d1vanov.github.io/quentier/blog/quentier-installation-of-dependencies/</guid>
      <description>Updated 2019-05-03
Table of contents  Introduction Dependencies Linux Mac Windows  Building dependencies with Visual Studio  Preparing the environment Building boost program options library Building OpenSSL Building libiconv Building zlib Building libxml2 Building libhunspell Building tidy-html5 Building qtkeychain Building Google breakpad  Building dependencies with MinGW  Building boost program options library Building OpenSSL Building libiconv Building zlib Building libxml2 Building libhunspell Building tidy-html5 Building qtkeychain    Introduction Quentier has a fair share of dependencies and their installation is a complex enough procedure, especially on Windows platform.</description>
    </item>
    
    <item>
      <title>Quentier internals overview</title>
      <link>https://d1vanov.github.io/quentier/blog/quentier-technical-overview/</link>
      <pubDate>Sun, 07 Jan 2018 23:20:33 +0300</pubDate>
      
      <guid>https://d1vanov.github.io/quentier/blog/quentier-technical-overview/</guid>
      <description>This post is primarily for developers who would like to contribute to Quentier but aren&amp;rsquo;t quite sure where to start. Here the high-level overview of the app design is explained.
First, let&amp;rsquo;s briefly enumerate the kinds of technology used in Quentier project:
 Qt/C++ CMake SQLite JavaScript CSS (a bit)  If you are familiar with any of these technologies, you are most likely able to help developing Quentier! However, note that there are some specific ways in which these technologies are used in the project.</description>
    </item>
    
  </channel>
</rss>